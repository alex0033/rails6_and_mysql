version: 2.1
jobs:
  rspec:
    working_directory: ~/rails6_and_mysql
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            set -x
            docker-compose up -d --build
            docker exec rails_web_ci curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      - run:
          name: Setup database
          command: |
            docker-compose exec web rails db:create
            docker-compose exec web rails db:schema:load
      - run:
          name: Run rspec
          command: docker-compose exec web rspec

  rubocop:
    working_directory: ~/rails6_and_mysql
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  deploy_for_verification:
    working_directory: ~/rails6_and_mysql
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Install Heroku CLI, if necessary
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: App_name setting
          command: |
            echo "export APP_NAME_FOR_VERIFICATION=rails6-mysql-sample" >> $BASH_ENV
      - run:
          name: Deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$APP_NAME_FOR_VERIFICATION.git master
      - run:
          name: Set database, if necessary
          command: |
            if [ -z "heroku config:get JAWSDB_URL --app $APP_NAME_FOR_VERIFICATION" ]; then
              echo "Database has been already set."
            else
              heroku addons:create jawsdb --app $APP_NAME_FOR_VERIFICATION
              DATABASE_URL='heroku config:get JAWSDB_URL --app $APP_NAME_FOR_VERIFICATION'
              DATABASE_URL2=${DATABASE_URL/mysql/mysql2}
              heroku config:set DATABASE_URL=$DATABASE_URL2 --app $APP_NAME_FOR_VERIFICATION
            fi
      - run:
          name: Run post-deploy tasks
          command: |
            heroku run --app $APP_NAME_FOR_VERIFICATION rails db:migrate

  deploy_for_production:
    working_directory: ~/rails6_and_mysql
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Install Heroku CLI, if necessary
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: App_name setting
          command: |
            echo "export APP_NAME_FOR_PRODUCTION=rails6-mysql" >> $BASH_ENV
      - run:
          name: Deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$APP_NAME_FOR_PRODUCTION.git master
      - run:
          name: Set database, if necessary
          command: |
            if [ -z "heroku config:get JAWSDB_URL --app $APP_NAME_FOR_PRODUCTION" ]; then
              echo "Database has been already set."
            else
              heroku addons:create jawsdb --app $APP_NAME_FOR_PRODUCTION
              DATABASE_URL='heroku config:get JAWSDB_URL --app $APP_NAME_FOR_PRODUCTION'
              DATABASE_URL2=${DATABASE_URL/mysql/mysql2}
              heroku config:set DATABASE_URL=$DATABASE_URL2 --app $APP_NAME_FOR_PRODUCTION
            fi
      - run:
          name: Run post-deploy tasks
          command: |
            heroku run --app $APP_NAME_FOR_PRODUCTION rails db:migrate

workflows:
  version: 2.1
  build:
    jobs:
      - rspec
      - rubocop
      - deploy_for_verification:
          requires:
            - rspec
            - rubocop
          filters:
            branches:
              ignore: master
      - deploy_for_production:
          requires:
            - rspec
            - rubocop
          filters:
            branches:
              only: master
